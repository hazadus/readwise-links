"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ —Å—Å—ã–ª–æ–∫ –∏–∑ Readwise.

–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ API Readwise –∏ —Å–æ–∑–¥–∞–µ—Ç –æ—Ç—á–µ—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
–¥–ª—è –∫–∞–∂–¥–æ–≥–æ location –¥–æ–∫—É–º–µ–Ω—Ç–∞.

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    uv run ./app/main.py --api-key your_api_key --dir ./reports
"""

import argparse
from pathlib import Path

from formatters.markdown import create_markdown_report
from schemas.readwise import ReadwiseDocument
from services.readwise import fetch_reader_document_list_api


def create_reports(
    *,
    token: str,
    dir: str,
):
    """
    –°–æ–∑–¥–∞–µ—Ç –æ—Ç—á–µ—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown –¥–ª—è –∫–∞–∂–¥–æ–≥–æ location –¥–æ–∫—É–º–µ–Ω—Ç–∞.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç—á–µ—Ç—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ —Ñ–∞–π–ª—ã —Å –∏–º–µ–Ω–∞–º–∏,
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ location –¥–æ–∫—É–º–µ–Ω—Ç–∞.

    :param token: API –∫–ª—é—á –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Readwise
    :param dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤
    :return: None
    """
    locations = [
        "new",
        "later",
        "shortlist",
        "archive",
    ]

    for location in locations:
        print(f"üöÄ –°–æ–∑–¥–∞—é –æ—Ç—á–µ—Ç –¥–ª—è '{location}'...")
        documents: list[ReadwiseDocument] = fetch_reader_document_list_api(
            token=token,
            location=location,
        )

        report = create_markdown_report(
            documents=documents,
            location=location,
            # –î–æ–±–∞–≤–ª—è–µ–º summary —Ç–æ–ª—å–∫–æ –¥–ª—è 'later' - –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –æ—Ç–æ–±—Ä–∞–Ω–Ω—ã—Ö –∫ –ø—Ä–æ—á—Ç–µ–Ω–∏—é
            add_summary=True if location == "later" else False,
        )

        filename = f"{location}.md"
        filepath = Path(dir) / filename
        filepath.parent.mkdir(parents=True, exist_ok=True)
        with open(filepath, "w") as f:
            f.write(report)
        print(f"‚úÖ –û—Ç—á–µ—Ç '{location}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ '{filepath}'")


def main():
    parser = argparse.ArgumentParser(
        description="–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ —Å—Å—ã–ª–æ–∫ –∏–∑ Readwise",
    )
    parser.add_argument(
        "--api-key",
        required=True,
        help="API –∫–ª—é—á –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
    )
    parser.add_argument(
        "--dir",
        required=False,
        default="links",
        help="–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤",
    )
    args = parser.parse_args()

    create_reports(
        token=args.api_key,
        dir=args.dir,
    )


if __name__ == "__main__":
    main()
